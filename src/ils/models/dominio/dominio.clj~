(ns dominio.dominio
  (:import (java.io ByteArrayInputStream))
  (:require [clojure.xml :as xml])
  (:require [clojure.zip :as zip])
  (:require [clojure.contrib.zip-filter.xml :as zf]))

;(ns dominio.dominio
;  (:use 'clojure.xml)) ; <- me ignore por enquanto...

;(use '[clojure.xml :only (parse)]) ;biblioteca de manipulação de xml do clojure! :D
;(use 'clojure.zip)
;(use 'clojure.contrib.zip-filter)
;(def estrutura-dominio (parse "src/dominio/dominio.xml")) ;xml não esta na pasta raiz, coloque diretório completo.
;(def zip-dom (clojure.zip/xml-zip estrutura-dominio))
;(clojure.contrib.zip-filter.xml/xml-> zip-dom :exercicio :enunciado)

;(defn get-struct-map [xml]
;  (if-not (empty? xml)
;    (let [stream (ByteArrayInputStream. (.getBytes (.trim xml)))]
;      (xml/parse stream))))

;(defn get-value [xml & tags]
;  (apply zf/xml1-> (zip/xml-zip (get-struct-map xml)) (conj (vec tags) zf/text)))


;(def zip-dom (clojure.zip/xml-zip (parse "src/dominio/dominio.xml")))
