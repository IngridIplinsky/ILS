<?xml version="1.0" encoding="UTF-8"?>
<exercicio
 xmlns="exercicio"
 xmlns:xsi="exercicio"
 xsi:schemaLocation="/src/dominio/exercicio.xsd">
		
		<disciplina>INF41</disciplina>
		<conteudo>lista</conteudo>	
		<idEx>l012</idEx>
		<nivel>medio</nivel>
		<tipo>programacao</tipo>
		<preReq>
			<req>alocDin</req>
		</preReq>

		<enunciado> 
			<texto> 
				Considere a implementação de uma lista encadeada para armazenar números reais dada pelo tipo abaixo:
			 </texto> 
			<codigo highlight="yes">
				struct lista {
					float info; 
					struct lista *prox;
				};
			typedef struct lista Lista;
			</codigo>  
			<texto> 
				Implemente uma função que, dados uma lista encadeada e um número inteiro não negativo n, remova
				da lista seus n primeiros nós e a lista resultante. Caso n seja maior do que o comprimento da lista,
				todos os seus elementos devem ser removidos e o resultado da função deve ser uma lista vazia. Esta função
				deve obedecer o seguinte protótipo:
			</texto> 
			<codigo highlight="yes">
				Lista* retira_prefixo (Lista* l, int n);
			</codigo> 
		</enunciado>
		
		<resposta>
			<codigo>
				Lista* retira_prefixo (Lista* l, int n)
				{
					Lista* p; /* variável auxiliar para percorrer a lista */
					Lista* q; /* variável auxiliar */
					int m = 1;
					p = l;
					while(p != NULL &amp;&amp; m &lt;= n)
					{ 
						m = m+1;
						q = p-&gt;prox;
						free(p);
						p = q;
					}
					return p;

				}
			</codigo>
	 	</resposta>

		<entradaCodigo />

</exercicio>

